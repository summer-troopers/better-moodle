{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Moodle App"
  },
  "host": "10.177.106.10",
  "tags": [
    {
      "name": "login"
    },
    {
      "name": "admin",
      "description": "Everything about Admins"
    },
    {
      "name": "teacher",
      "description": "Everything about Tachers"
    },
    {
      "name": "student",
      "description": "Everything about Studnets"
    },
    {
      "name": "course",
      "description": "Everything about Courses"
    },
    {
      "name": "group",
      "description": "Everything about Groups"
    },
    {
      "name": "specialty",
      "description": "Everything about Specialties"
    }
  ],
  "schemes": [
    "http"
  ],
  "security": [
    {
      "api_key": []
    }
  ],
  "paths": {
    "/api/v1/login": {
      "post": {
        "tags": [
          "login"
        ],
        "summary": "Get authorization token.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "error"
          }
        }
      }
    },
    "/api/v1/admins": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get all admins",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer"
            },
            "description": "Nr. of items to skip before starting to collect results"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            },
            "description": "Nr. of items to return"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "error"
          }
        }
      },
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Add an admin in the DB.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Admin"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "error"
          }
        }
      }
    },
    "/api/v1/teachers": {
      "get": {
        "tags": [
          "teacher"
        ],
        "summary": "Get all teachers",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer"
            },
            "description": "Nr. of items to skip before starting to collect results"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            },
            "description": "Nr. of items to return"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "error"
          }
        }
      },
      "post": {
        "tags": [
          "teacher"
        ],
        "summary": "Add a teacher in the DB.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Teacher"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "error"
          }
        }
      }
    },
    "/api/v1/students": {
      "get": {
        "tags": [
          "student"
        ],
        "summary": "Get all students",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer"
            },
            "description": "Nr. of items to skip before starting to collect results"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            },
            "description": "Nr. of items to return"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "error"
          }
        }
      },
      "post": {
        "tags": [
          "student"
        ],
        "summary": "Add a student in the DB.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Student"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "error"
          }
        }
      }
    },
    "/api/v1/courses": {
      "get": {
        "tags": [
          "course"
        ],
        "summary": "Get all courses",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer"
            },
            "description": "Nr. of items to skip before starting to collect results"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            },
            "description": "Nr. of items to return"
          },
          {
            "in": "query",
            "name": "contains",
            "schema": {
              "type": "string"
            },
            "description": "Part of the name to be searched for"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "error"
          }
        }
      },
      "post": {
        "tags": [
          "course"
        ],
        "summary": "Add a course in the DB.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Course"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "error"
          }
        }
      }
    },
    "/api/v1/groups": {
      "get": {
        "tags": [
          "group"
        ],
        "summary": "Get all groups",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer"
            },
            "description": "Nr. of items to skip before starting to collect results"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            },
            "description": "Nr. of items to return"
          },
          {
            "in": "query",
            "name": "contains",
            "schema": {
              "type": "string"
            },
            "description": "Part of the name to be searched for"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "error"
          }
        }
      },
      "post": {
        "tags": [
          "group"
        ],
        "summary": "Add a group in the DB.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Group"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "error"
          }
        }
      }
    },
    "/api/v1/specialties": {
      "get": {
        "tags": [
          "specialty"
        ],
        "summary": "Get all specialties",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer"
            },
            "description": "Nr. of items to skip before starting to collect results"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            },
            "description": "Nr. of items to return"
          },
          {
            "in": "query",
            "name": "contains",
            "schema": {
              "type": "string"
            },
            "description": "Part of the name to be searched for"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "error"
          }
        }
      },
      "post": {
        "tags": [
          "specialty"
        ],
        "summary": "Add a speciality in the DB.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Specialty"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "error"
          }
        }
      }
    },
    "/api/v1/admins/{id}": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get an admin by id.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Get the admin by ID.",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "error"
          }
        }
      },
      "delete": {
        "tags": [
          "admin"
        ],
        "summary": "Delete an admin by ID.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Admin to be deleted.",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "404": {
            "description": "error"
          }
        }
      },
      "put": {
        "tags": [
          "admin"
        ],
        "summary": "Update the data of an admin.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Admin"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Admin not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/api/v1/teachers/{id}": {
      "get": {
        "tags": [
          "teacher"
        ],
        "summary": "Get a teacher",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Get the teacher by ID.",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "error"
          }
        }
      },
      "delete": {
        "tags": [
          "teacher"
        ],
        "summary": "Delete a teacher by ID.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the teacher to be deleted.",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "404": {
            "description": "error"
          }
        }
      },
      "put": {
        "tags": [
          "teacher"
        ],
        "summary": "Update the data of an teacher.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Teacher"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Teacher not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/api/v1/students/{id}": {
      "get": {
        "tags": [
          "student"
        ],
        "summary": "Get a student by ID.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Get the student by ID.",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "error"
          }
        }
      },
      "delete": {
        "tags": [
          "student"
        ],
        "summary": "Delete a student by ID.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the student to be deleted.",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "404": {
            "description": "error"
          }
        }
      },
      "put": {
        "tags": [
          "student"
        ],
        "summary": "Update the data of an student.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Student"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Student not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/api/v1/courses/{id}": {
      "get": {
        "tags": [
          "course"
        ],
        "summary": "Get a course by ID.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Get the course by ID.",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "error"
          }
        }
      },
      "delete": {
        "tags": [
          "course"
        ],
        "summary": "Delete a course by ID.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the course to be deleted.",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "error"
          }
        }
      },
      "put": {
        "tags": [
          "course"
        ],
        "summary": "Update the data of an course.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Course"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Course not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/api/v1/groups/{id}": {
      "get": {
        "tags": [
          "group"
        ],
        "summary": "Get a group by ID.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Get the group by ID..",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "error"
          }
        }
      },
      "delete": {
        "tags": [
          "group"
        ],
        "summary": "Delete a group by ID.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the group to be deleted.",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "404": {
            "description": "error"
          }
        }
      },
      "put": {
        "tags": [
          "group"
        ],
        "summary": "Update the data of a group by ID.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Group"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Group not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/api/v1/specialties/{id}": {
      "get": {
        "tags": [
          "specialty"
        ],
        "summary": "Get a specialty by ID.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the specialty to be shown",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "error"
          }
        }
      },
      "delete": {
        "tags": [
          "specialty"
        ],
        "summary": "Delete a speciality by ID.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the specialty to be deleted.",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "404": {
            "description": "error"
          }
        }
      },
      "put": {
        "tags": [
          "specialty"
        ],
        "summary": "Update the data of a speciality by ID.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Specialty"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Specialty not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "name": "token",
      "in": "header"
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "required": [
        "email",
        "password"
      ],
      "properties": {
        "email": {
          "type": "string",
          "format": "email"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "Admin": {
      "type": "object",
      "required": [
        "firstName",
        "lastName",
        "email",
        "password",
        "phoneNumber"
      ],
      "properties": {
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string",
          "format": "email"
        },
        "password": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        }
      }
    },
    "Teacher": {
      "type": "object",
      "required": [
        "firstName",
        "lastName",
        "email",
        "password",
        "phoneNumber"
      ],
      "properties": {
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string",
          "format": "email"
        },
        "password": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        }
      }
    },
    "Student": {
      "type": "object",
      "required": [
        "firstName",
        "lastName",
        "email",
        "password",
        "phoneNumber",
        "idGroup"
      ],
      "properties": {
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string",
          "format": "email"
        },
        "password": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "idGroup": {
          "type": "integer"
        }
      }
    },
    "Course": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "Group": {
      "type": "object",
      "required": [
        "name",
        "idSpecialty"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "idSpecialty": {
          "type": "integer"
        }
      }
    },
    "Specialty": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        }
      }
    }
  }
}
